{
	"common":{
		"name": "comparison_k",
		"runs": 10,
		"M": 1001,
		"n test":300,
		"step test":50,
		"n cross":1000
	},
	"functions":
	[
		{ 
			"name": "identity",
			"legend":"Identity Function",
			"input dimension":1,
			"input bounds": [[0,1]],
			"output bounds":[-0.1,1.1]
		}
	],
	"algorithms":
	[
		{
			"type":"list",
			"name": "FinalAlgorithm1",
			"legend":"K= 300",
			"static":300,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":300
		},
		{
			"type":"list",
			"name": "FinalAlgorithm2",
			"legend":"K= 250",
			"static":250,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":250
		},
		{
			"type":"list",
			"name": "FinalAlgorithm3",
			"legend":"K= 200",
			"static":200,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":200
		},
		{
			"type":"list",
			"name": "FinalAlgorithm4",
			"legend":"K= 150",
			"static":150,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":150
		},
		{
			"type":"list",
			"name": "FinalAlgorithm5",
			"legend":"K= 100",
			"static":100,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":100
		},
		{
			"type":"list",
			"name": "FinalAlgorithm6",
			"legend":"K= 80",
			"static":80,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":80
		},
		{
			"type":"list",
			"name": "FinalAlgorithm7",
			"legend":"K= 70",
			"static":70,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":70
		},
		{
			"type":"list",
			"name": "FinalAlgorithm8",
			"legend":"K= 60",
			"static":60,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":60
		},
		{
			"type":"list",
			"name": "FinalAlgorithm9",
			"legend":"K= 90",
			"static":90,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":90
		},
		{
			"type":"list",
			"name": "FinalAlgorithm10",
			"legend":"K= 140",
			"static":140,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":140
		},
		{
			"type":"list",
			"name": "FinalAlgorithm11",
			"legend":"K= 130",
			"static":130,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":130
		},
		{
			"type":"list",
			"name": "FinalAlgorithm12",
			"legend":"K= 120",
			"static":120,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":120
		},
		{
			"type":"list",
			"name": "FinalAlgorithm13",
			"legend":"K= 110",
			"static":110,
			"min_num_synapse_factor":3,
			"alpha": 0.1,
			"alpha synapse":0.3,
			"prune_constant":[3],
			"k output factor":[3.0], 
			"k input factor":[3.0],
			"minimal_number_synapses":110
		}
	],
	"mappings":
	[
		{
			"input": {
				"n":1000,
				"type":"linear"
			},
			"output": {
				"n":1000,
				"type":"linear"
			}
		}
	]
	
}

